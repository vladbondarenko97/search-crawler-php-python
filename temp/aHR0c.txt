Islamic state - Wikipedia
Islamic state
From Wikipedia, the free encyclopedia
Jump to:					navigation, 					search
This article is about the type of government. For the Islamic jihadist group that calls itself "the Islamic State", see Islamic State of Iraq and the Levant. For other uses, see Islamic state (disambiguation).
Part of the Politics series
Basic forms of government
Power structure
Separation
Associated state
Dominion
Chiefdom
Federalism
Federation
Confederation
Devolution
Integration
Empire
Hegemony
Unitary state
Administrative division
Power source
Democracy
power of many
Direct
Representative
Liberal
Social
Demarchy
others
Oligarchy
power of few
Aristocracy
Plutocracy
Kraterocracy
Stratocracy
Timocracy
Meritocracy
Technocracy
Geniocracy
Noocracy
Kritarchy
Particracy
Ergatocracy
Netocracy
Autocracy
power of one
Despotism
Dictatorship
Military dictatorship
Others
Anocracy
Anarchy
Theocracy
Power ideology
Monarchy vs. Republic
socio-political ideologies
Absolute
Legalist
Constitutional
Parliamentary
Directorial
Semi-presidential
Presidential
Authoritarian vs. Libertarian
socio-economic ideologies
Tribalism
Despotism
Feudalism
Colonialism
Minarchism
Distributism
Anarchism
Socialism
Communism
Totalitarianism
Global vs. Local
geo-cultural ideologies
Commune
City-state
National government
Intergovernmental organisation
World government
Politics portal
v
t
e
Part of a series on:
Islamism
Fundamentals
Islam
History
Culture
Economics
Politics
Secularism
Ideology
Islamism
Qutbism
Salafism
Shia Islamism
Islamic fundamentalism
Concepts
Caliphate
Islamic democracy
Islamic socialism
Islamic state
Islamic monarchy
Islamic republic
Islamization (of knowledge)
Jihad
Pan-Islamism
Post-Islamism
Sharia
Shura
Slavery
Two-nation theory
Ummah
Influences
Anti-imperialism
Anti-Zionism
Islamic Golden Age
Islamic revival
Movements
Scholastic
Ahl-i Hadith
Deobandi
Madkhalism
Sahwa movement
Wahhabism
Political
Hizb ut-Tahrir
Iranian Revolution
Jamaat-e-Islami
Millî Görüş
Muslim Brotherhood
List of Islamic political parties
Militant
Militant Islamism based in
MENA region
South Asia
Southeast Asia
Sub-Saharan Africa
Key texts
Reconstruction of Religious Thought in Islam
(Iqbal 1930s)
Principles of State and Government
(Asad 1961)
Ma'alim fi al-Tariq ("Milestones")
(Qutb 1965)
Islamic Government:
Governance of the Jurist ("Velayat-e faqih")
(Khomeini 1970)
Heads of state
Ali Khamenei
Omar al-Bashir
Muammar Gaddafi
Ruhollah Khomeini
Mohamed Morsi
Mohammad Omar
House of Saud
House of Thani
Zia-ul-Haq
Key ideologues
Muhammad Abduh
Jamāl al-Dīn al-Afghānī
Qazi Hussain Ahmad
Muhammad Nasiruddin al-Albani
Muhammad Asad
Hassan al-Banna
Necmettin Erbakan
Rached Ghannouchi
Safwat Hegazi
Muhammad Iqbal
Ali Khamenei
Ruhollah Khomeini
Abul A'la Maududi
Taqi al-Din al-Nabhani
Yusuf al-Qaradawi
Sayyid Qutb
Tariq Ramadan
Ata Abu Rashta
Rashid Rida
Navvab Safavi
Ali Shariati
Haji Shariatullah
Hassan Al-Turabi
Ahmed Yassin
Related topics
Criticism of Islamism
Islam and other religions
Islamophobia
Reform movements
Modernity (Modernism)
Islam portal
Politics portal
v
t
e
An Islamic state (Arabic: دولة إسلامية‎, dawlah islāmiyyah) is a type of government primarily based on the application of shari'a (Islamic law), dispensation of justice, maintenance of law and order.[1] From the early years of Islam, numerous governments have been founded as "Islamic".[2]
However, the term "Islamic state" has taken on a more specific connotation since the 20th century. The concept of the modern Islamic state has been articulated and promoted by ideologues such as Ayatollah Ruhollah Khomeini, Israr Ahmed or Sayyid Qutb. Like the earlier notion of the caliphate, the modern Islamic state is rooted in Islamic law. It is modeled after the rule of Muhammad. However, unlike caliph-led governments which were imperial despotisms or monarchies (Arabic: malik), a modern Islamic state can incorporate modern political institutions such as elections, parliamentary rule, judicial review, and popular sovereignty.
Today, many Muslim countries have incorporated Islamic law, wholly or in part, into their legal systems. Certain Muslim states have declared Islam to be their state religion in their constitutions, but do not apply Islamic law in their courts. Islamic states which are not Islamic monarchies are usually referred to as Islamic republics.
Contents
1 The historical Islamic state
1.1 Early Islamic governments
1.2 The essence of Islamic governments
1.3 Revival and abolition of the Ottoman Caliphate
2 The modern Islamic state
2.1 Origins in 20th-century nationalist and anti-imperialist movements
2.2 Islamic states today
2.2.1 Iran
2.2.2 Pakistan
3 See also
4 References
5 Further reading
6 External links
The historical Islamic state[edit]
Early Islamic governments[edit]
Main articles: Muhammad in Medina and Caliphate
The first Islamic State was the political entity established by Muhammad in Medina in 622 CE, under the Constitution of Medina. It represented the political unity of the Muslim Ummah (nation). It was subsequently transformed into the caliphate by Muhammad's disciples, who were known as the Rightly Guided (Rashidun) Caliphs (632–661 CE). The Islamic State significantly expanded under the Umayyad Caliphate (661–750) and consequently the Abbasid Caliphate (750–1258).
The essence of Islamic governments[edit]
The essence or guiding principles of an Islamic government or Islamic state, is the concept of Al-Shura. Different scholars have different understandings or thoughts, with regard to the concept al-Shura. However, most Muslim scholars are of the opinion that Islamic al-Shura should consist of:[3]
Meeting or consultation, that follows the teachings of Islam.
Consultation following the guidelines of the Quran and Sunnah.
There is a leader elected among them to head the meeting.
The discussion should be based on mushawarah and mudhakarah.
All members are given fair opportunity to voice out their opinions.
The issue should be of maslahah ammah or public interest.
The voices of the majority are accepted, provided it does not violate the teachings of the Quran or Sunnah.
Muhammad himself respected the decision of the shura members. He is the champion of the notion of al-Shura, and this was illustrated in one of the many historical events, such as in the Battle of Khandaq (Battle of the Trench), where Muhammad was faced with two decisions, i.e. to fight the invading non-Muslim Arab armies outside of Medina or wait until they enter the city. After consultation with the sahabah (companions), it was suggested by Salman al-Farsi that it would be better if the Muslims fought the non-Muslim Arabs within Medina by building a big ditch on the northern periphery of Medina to prevent the enemies from entering Medina. This idea was later supported by the majority of the sahabah, and thereafter Muhammad also approved it.
The reason why Muhammad placed great emphasis on the agreement of the decision of the shura was because the majority of opinion (by the sahabah) is better than the decision made by one individual.
Revival and abolition of the Ottoman Caliphate[edit]
Main article: Ottoman Caliphate
The Ottoman Sultan, Selim I (1512–1520) reclaimed the title of caliph, which had been in dispute and asserted by a diversity of rulers and "shadow caliphs" in the centuries of the Abbasid-Mamluk Caliphate since the Mongols' sacking of Baghdad and the killing of the last Abbasid Caliph in Baghdad, Iraq 1258.
The Ottoman Caliphate as an office of the Ottoman Empire was abolished under Mustafa Kemal Atatürk in 1924 as part of Atatürk's Reforms. This move was most vigorously protested in India, as Gandhi and Indian Muslims united behind the symbolism of the Ottoman Caliph in the Khilafat (or "Caliphate") Movement, which sought to reinstate the Caliph deposed by Atatürk. The Khilafat Movement leveraged the Ottoman political resistance to the British Empire, and this international anti-imperial connection proved to be a galvanizing force during India's nascent nationalism movement of the early 1900s, for Hindus and Muslims alike, even though India was far from the seat of the Ottoman Caliphate in Istanbul. However, the Khilaphat found little support from the Muslims of the middle east themselves who preferred to be independent nation states, instead of being under the Ottoman (Turkish ) rule. In the Indian sub-continent, although Mahatma Gandhi tried to co-opt Khilafat as a national movement, it soon degenerated into a jihad against non-Muslims with thousands being killed in malabar region of Kerala (also known as Moplah riots).
The modern Islamic state[edit]
Origins in 20th-century nationalist and anti-imperialist movements[edit]
See also: Abul A'la Maududi and Islamic Government: Governance of the Jurist
"The very term, 'Islamic State', was never used in the theory or practice of Muslim political science, before the twentieth century," according to Pakistani scholar of Islamic history Qamaruddin Khan.[4][5]
The modern conceptualization of the "Islamic state" is attributed to Abul A'la Maududi (1903–1979), a Pakistani Muslim theologian who founded the political party Jamaat-e-Islami and inspired other Islamic revolutionaries such as Ayatollah Ruhollah Khomeini.[6] Abul A'la Maududi's early political career was influenced greatly by anti-colonial agitation in India, especially after the tumultuous abolition of the Ottoman Caliphate in 1924 stoked anti-British sentiment.[7]
The Islamic state was perceived as a "third way" between the rival political systems of democracy and socialism (see also Islamic Modernism).[8] Maududi's seminal writings on Islamic economics argued as early as 1941 against free-market capitalism and socialist state intervention in the economy, similar to Mohammad Baqir al-Sadr's later Our Economics written in 1961. Maududi envisioned the ideal Islamic state as combining the democratic principles of electoral politics with the socialist principles of concern for the poor.[9]
Islamic states today[edit]
Islamic states (dark green), states where Islam is the official religion (light green), secular states (blue) and other (orange), among countries with a Muslim majority.
Today, many Muslim countries have incorporated Islamic law in part, into their legal systems. Certain Muslim states have declared Islam to be their state religion in their constitutions, but do not apply Islamic law in their courts. Islamic states which are not Islamic monarchies are usually referred to as Islamic republics,[10] such as the Islamic Republics of Pakistan, Mauritania, Iran[11] and Afghanistan.[12] Pakistan adopted the title under the constitution of 1956. Mauritania adopted it on 28 November 1958. Iran adopted it after the 1979 Revolution that overthrew the Pahlavi dynasty. In Iran, the form of government is known as "Guardianship of the Islamic Jurists". Afghanistan was run as an Islamic state ("Islamic State of Afghanistan") in the post-communist era since 1992 but then de facto by the Taliban ("Islamic Emirate of Afghanistan") in areas controlled by them since 1996, and after the 2001 overthrow of the Taliban the country is still known as the "Islamic Republic of Afghanistan". Despite the similar name, the countries differ greatly in their governments and laws.
Pan-Islamism is a form of religious nationalism within political Islam which advocates the unification of the Muslim world under a single Islamic state, often described as a caliphate or ummah. The most famous, powerful and aggressive modern pan-Islamic group that pursues objective to unify Muslim world and establish worldwide caliphate is the wahhabi/salafi jihadist movement Islamic State of Iraq and the Levant.
The Libyan interim Constitutional Declaration as of 3 August 2011 declared Islam to be the official religion of Libya.
Iran[edit]
Leading up to the Iranian Revolution of 1979, many of the highest-ranking clergy in Shia Islam held to the standard doctrine of the Imamate, which allows political rule only by Muhammad or one of his true successors. They were opposed to creating an Islamic state (see Ayatollah Ha'eri Yazdi (Khomeini's own teacher), Ayatollah Borujerdi, Grand Ayatollah Shariatmadari, and Grand Ayatollah Abu al-Qasim al-Khoei).[13] Contemporary theologians who were once part of the Iranian Revolution also became disenchanted and critical of the unity of religion and state in the Islamic Republic of Iran, are advocating secularization of the state to preserve the purity of the Islamic faith (see Abdolkarim Soroush and Mohsen Kadivar).[14]
Pakistan[edit]
Pakistan was created as a separate state for Indian Muslims in British India in 1947, and followed the parliamentary form of democracy. In 1949, the first Constituent Assembly of Pakistan passed the Objectives Resolution which envisaged an official role for Islam as the state religion to make sure any future law should not violate its basic teachings. On the whole, the state retained most of the laws that were inherited from the British legal code that had been enforced by the British Raj since the 19th century. In 1956, the elected parliament formally adopted the name "Islamic Republic of Pakistan", declaring Islam as the official religion.
See also[edit]
Theocracy
Christian republic
Jewish state
Syed Farid al-Attas
Hizb ut-Tahrir
Islamic Revolutionary State of Afghanistan
Former Salafist states in Afghanistan
Islamic Emirate of Afghanistan
Islamic State of Azawad – a former short-lived unrecognised state declared unilaterally in 2012 by the National Movement for the Liberation of Azawad
Islamic State of Waziristan – also known as Islamic Emirate of Waziristan, declared in Waziristan, Pakistan
Islamic State of Indonesia – (Negara Islam Indonesia or Darul Islam), Islamist group in Indonesia that aims for the establishment of an Islamic state of Indonesia (an unrecognised state)
References[edit]
^ Ashgar, Ali (2006). The State in Islam: Nature and the Scope. Pinnacle Technology. p. 91. ISBN 9781618200822.
^ See article by Imam Mohamad Jebara "The delusion of an Islamic State" http://www.ottawasun.com/2015/10/18/the-delusion-of-an-isalmic-state
^ Jeong Chun Hai & Nor Fadzlina Nawi. (2007). Principles of Public Administration: An Introduction. Kuala Lumpur: Karisma Publications. ISBN 978-983-195-253-5
^ Khan, Qamaruddin (1982). Political Concepts in the Quran. Lahore: Islamic Book Foundation. p. 74. The claim that Islam is a harmonious blend of religion and politics is a modern slogan, of which no trace can be found in the past history of Islam. The very term, “Islamic State” was never used in the theory or practice of Muslim political science, before the twentieth century. Also if the first thirty years of Islam were excepted, the historical conduct of Muslim states could hardly be distinguished from that of other states in world history.
^ Eickelman, D. F., & Piscatori, J. (1996). Muslim politics. Princeton: Princeton University Press. p. 53. The Pakistani writer Qamaruddin Khan, for example, has proposed that the political theory of Islam does not arise from the Qur'an but from circumstances and that the state is neither divinely sanctioned nor strictly necessary as a social institution. CS1 maint: Multiple names: authors list (link)
^ Nasr, S.V.R. 1996. Mawdudi and the Making of Islamic Revivalism, Ch. 4. New York: Oxford University Press
^ Minault, G. The Khilafat Movement: Religious Symbolism and Political Mobilization in India. New York: Columbia University Press, 1982.
^ Kurzman, Charles. “Introduction,” in Modernist Islam 1840-1940: A Sourcebook. Oxford: Oxford University Press, 2002.
^ Khir, B.M. “The Islamic Quest for Sociopolitical Justice.” In Blackwell Companion to Political Theology, edited by W.T. Cavanaugh & P. Scott, 503-518. Malden, MA: Blackwell Publishing, 2004
^ Elliesie, Hatem. Rule of Law in Islamic Modeled States. In: Matthias Koetter / Gunnar Folke Schuppert (Eds.), Understanding of the Rule of Law in various Legal Orders of the World: Working Paper Series Nr. 13 of SFB 700: Governance in Limited Areas of Statehood, Berlin 2010.
^ Moschtaghi, Ramin. Rule of Law in Iran. In: Matthias Koetter / Gunnar Folke Schuppert (Eds.), Understanding of the Rule of Law in various Legal Orders of the World: Working Paper Series Nr. 11 of SFB 700: Governance in Limited Areas of Statehood, Berlin 2010.
^ Elliesie, Hatem. Rule of Law in Afghanistan. In: Matthias Koetter / Gunnar Folke Schuppert (Eds.), Understanding of the Rule of Law in various Legal Orders of the World: Working Paper Series Nr. 4 of SFB 700: Governance in Limited Areas of Statehood, Berlin 2010.
^ Chehabi, H. E. 1991. Religion and Politics In Iran: How Theocratic is the Islamic Republic?. Daedalus, Vol 120, No. 3, Summer 1991, pp. 69-91.
^ Kurzman, Charles. 2001. Critics Within: Islamic Scholars' Protest Against the Islamic State in Iran. International Journal of Politics, Culture and Society, Vol. 15, No. 2, Winter 2001..
Further reading[edit]
Ankerl, Guy Contemporary Coexisting Civilizations. Arabo-Muslim, Bharati, Chinese, and Western. INUPress, Geneva, 2000, 5001 p. ISBN 2-88155-004-5.
External links[edit]
Why Islamic States Would Be Bad for Muslims
The Islamic State by Amin Ahsan Islahi[dead link]
v
t
e
Islamic states by type
Sunni Islamic state
Sunni Caliphate
Ilkhanate
Emirate
Sheikhdom
Sultanate
Shia Islamic state
Shia Caliphate
Government by Shia Imams
Twelver Imams government
Sevener Imams government
Regency of the Islamic jurist during the Occultation of the Mahdi
Ecumenical or Pan-Islamic
Islamic republic
Islamic monarchy
v
t
e
Religion and politics
General concepts
Anti-clericalism
Anticlericalism and Freemasonry
Caesaropapism
Clericalism
Clerical fascism
Confessionalism
Divine rule
Engaged Spirituality
Feminist theology
Thealogy
Womanist theology
Identity politics
Political religion
Progressive Reconstructionism
Religious anarchism
Religious anti-Masonry
Religious anti-Zionism
Religious communism
Religious humanism
Religious law
Religious nationalism
Religious pacifism
Religion and peacebuilding
Religious police
Religious rejection of politics
Religious segregation
Religious separatism
Religious socialism
Religious views on same-sex marriage
Secularism
Laïcité
Secular religion
Separation of church and state
Spiritual left
State atheism
State religion
Theocracy
Theonomy
Christianity and politics
Blaine Amendment
Christian anarchism
Christian anti-communism
Christian anti-Masonry
Papal ban
Christian anti-Zionism
Christian communism
Christian corporatism
Christian democracy
Christian egalitarianism
Christian environmentalism
Evangelical environmentalism
Christian fascism
German Christians
National Catholicism
Positive Christianity
Protestant Reich Church
Christian feminism
Mormon feminism
Christian humanism
Christian law
Christian left
Evangelical left
Christian libertarianism
Christian pacifism
Christian peacemaking
Christian reconstructionism
Christian republic
Christian right
Christian socialism
In Utah
Christian state
Christian Zionism
Cisalpinism
Dominion Theology
Febronianism
Gallicanism
Liberation theology
Papal state
Pillarisation
Political Catholicism
Relations between the Catholic Church and the state
In Argentina
Sphere sovereignty
Subsidiarity
Temporal power
Theodemocracy
Ultramontanism
Neo-ultramontanism
Islam and politics
Hui pan-nationalism
Human Rights in Islam
Imamate
Islamic anarchism
Islamic anti-Masonry
Islamic anti-Zionism
Islamic democracy
Islamic fascism
Islamic feminism
Islamic law
by country
Islamic nationalism
In Pakistan
In South Asia
Islamic pacifism
Islamic republic
Islamic socialism
Islamic state
Islamic Zionism
Islamism
Criticism
Islamization
Khilafat
Petro-Islam
Political quietism
Taliban
Talibanization
Two-nation theory
Judaism and politics
Halachic state
Jewish anarchism
Jewish anti-Zionism
Haredim
Jewish Autonomism
Jewish democracy
Jewish fascism
Kahanism
Revisionist Maximalism
Jewish feminism
Jewish law
Jewish left
Jewish pacifism
Jewish political movements
Jewish right
Jewish secularism
Jewish socialism
Bundism
Humanistic Judaism
Poale Zion
Religious Zionism
World Agudath Israel
Hinduism and politics
Akhand Bharat
Hindu feminism
Gandhism
Hindu law
Hindu modernism
Hindu nationalism
Hindutva
Hindu Rashtra
Panun Kashmir
Bangabhumi
Hindu revolution
Hindu revivalism
Hindu environmentalism
Integral humanism
Indigenous Aryans
Rama Rajya
Saffronisation
Shuddhi
Uniform civil code
Buddhism and politics
Buddhists anti-communism
Buddhist feminism
Buddhist law
Buddhist modernism
Buddhist nationalism
969 Movement
Nichirenism
Sinhalese Buddhist nationalism
Buddhist socialism
Engaged Buddhism
Humanistic Buddhism
Secular Buddhism
Other
American civil religion
Imperial cult
Ancient Rome
Gottgläubig
Khalistan movement
Neopaganist feminism
Religious aspects of Nazism
Creativity (religion)
Nazi Satanism
Personality cult
State Shinto
Retrieved from "https://en.wikipedia.org/w/index.php?title=Islamic_state&oldid=819503864"
Categories: Forms of governmentIslam and governmentIslamic statesIslamismHidden categories: CS1 maint: Multiple names: authors listArticles containing Arabic-language textAll articles with dead external linksArticles with dead external links from February 2017
Navigation menu
Personal tools
Not logged inTalkContributionsCreate accountLog in
Namespaces
ArticleTalk
Variants
Views
ReadEditView history
More
Search
Navigation
Main pageContentsFeatured contentCurrent eventsRandom articleDonate to WikipediaWikipedia store
Interaction
HelpAbout WikipediaCommunity portalRecent changesContact page
Tools
What links hereRelated changesUpload fileSpecial pagesPermanent linkPage informationWikidata itemCite this page
Print/export
Create a bookDownload as PDFPrintable version
Languages
AlemannischAsturianuAzərbaycancaবাংলাBân-lâm-gúБългарскиCatalàDanskDeutschEestiΕλληνικάEspañolEsperantoEuskaraفارسیFrançais客家語/Hak-kâ-ngî한국어ՀայերենItalianoҚазақшаKurdîBahasa MelayuMìng-dĕ̤ng-ngṳ̄日本語Oʻzbekcha/ўзбекчаپښتوPortuguêsРусскийSimple EnglishСрпски / srpskiSrpskohrvatski / српскохрватскиTürkçeУкраїнськаTiếng Việt文言粵語Zazaki中文
Edit links
This page was last edited on 9 January 2018, at 18:52.
Text is available under the Creative Commons Attribution-ShareAlike License;
additional terms may apply.
By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.
Privacy policy
About Wikipedia
Disclaimers
Contact Wikipedia
Developers
Cookie statement
Mobile view